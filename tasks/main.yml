---
- name: Select PHP Version
  shell: php -v | grep -Po -m 1 "PHP \K[0-9].[0-9]"
  register: jsmin_php_version
  when: jsmin_php_version is undefined
  changed_when: false

- name: Test path validity for old PHP/Debian combinations.
  stat: '{{ jsmin_path_php }}'
  register: jsmin_path_php_stat
  when:
  - ansible_distribution == "Debian"
  - ansible_distribution_major_version == "8"
  - jsmin_php_version|int == 5
  changed_when: false

- name: Set variables for old PHP/Debian combinations.
  include_vars: debian.yml
  when:
  - ansible_distribution == "Debian"
  - ansible_distribution_major_version == "8"
  - jsmin_php_version|int == 5
  - jsmin_path_php_stat.stat.exists == false
  changed_when: false

- name: Get installed version
  shell: '{{ jsmin_path_php}} -i | grep -Po -m 1 "jsmin version => \K[0-9].[0-9].[0-9]"'
  register: jsmin_current_version
  failed_when: "jsmin_current_version.rc == 2"
  changed_when: false

- name: Select JSMin branch for PHP 5.x
  set_fact:
    jsmin_branch: master
  when: jsmin_php_version|int == 5

- name: Select JSMin branch for PHP 7.x
  set_fact:
    jsmin_branch: feature/php7
  when: jsmin_php_version|int == 7

- name: Clone the jsmin repo
  git:
    repo: https://github.com/sqmk/pecl-jsmin.git
    dest: '{{ jsmin_clone_dest }}'
    version: '{{ jsmin_branch}}'
  changed_when: false

- name: Get latest JSMin version string
  shell: grep -Po -m 1 'PHP_JSMIN_VERSION "\K[0-9].[0-9].[0-9]' php_jsmin.h
  args:
    chdir: '{{ jsmin_clone_dest }}'
  register: jsmin_version
  changed_when: false
  when: jsmin_current_version

- name: Check if installation needed
  set_fact:
    jsmin_latest_installed: true
  when: jsmin_current_version.stdout == jsmin_version.stdout

- name: Run phpize
  command: '{{ jsmin_path_phpize }}'
  args:
    chdir: '{{ jsmin_clone_dest }}'
  changed_when: false
  when: jsmin_latest_installed is undefined

- name: Configure jsmin for building
  shell: './configure --with-php-config={{ jsmin_path_phpconfig }}'
  args:
    chdir: '{{ jsmin_clone_dest }}'
  changed_when: false
  when: jsmin_latest_installed is undefined

- name: Build jsmin
  make:
    chdir: '{{ jsmin_clone_dest }}'
    target: install
  when: jsmin_latest_installed is undefined

- name: Remove temporary files
  file:
    path: '{{ jsmin_clone_dest }}'
    state: absent
  changed_when: false

- name: Create jsmin.ini
  copy:
    content: 'extension=jsmin.so'
    dest: '{{ jsmin_path_ini }}'
  when:
  - jsmin_latest_installed is undefined

- name: Enable jsmin
  command: '{{ jsmin_path_phpenable }} jsmin'
  when:
  - jsmin_enable
  - jsmin_latest_installed is undefined